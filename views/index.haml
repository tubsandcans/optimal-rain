- new_pumps.each do |new_pump|
  %h4= "New cycle for pin #{new_pump}"
  %form{id: "new_cycle_form", method: "POST", action: "/"}
    %label Cycle start-time
    %input{type: "hidden", name: "pin_number", value: new_pump}
    %input.cycle-start{type: "text", name: "cycle_start"}
    %button{type: "submit"} Set Cycle
- pumps.each do |pump|
  - schedule = TurnAndBurnRunner::ACTIVE_SCHEDULES[pump.pin_number]
  - if schedule.nil?
    %p This cycle has ended, no future watering events.
  - else
    %p <b>Next watering:</b> <em>#{schedule.begin_watering_event.strftime('%B %d %I:%M %p')} for #{schedule.duration_in_seconds.round} seconds</em>
  %form{id: "cycle_form", method: "POST", action: "/#{pump.id}"}
    %b Cycle Start
    %input{type: "hidden", name: "_method", value: "put"}
    %input.cycle-start{type: "text", name: "cycle_start", value: pump.cycle_start}
    %button{type: "submit"} Change Cycle
  %form{id: "remove_cycle_#{pump.id}", method: "POST", action: "/#{pump.id}"}
    %input{type: "hidden", name: "_method", value: "delete"}
    %button.remove{type: "submit"} Remove
